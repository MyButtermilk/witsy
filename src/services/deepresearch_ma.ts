
import { Configuration } from '../types/config'
import { LlmChunk, LlmEngine } from 'multi-llm-ts'
import * as dr from './deepresearch'
import Generator, { GenerationResult } from './generator'
import AgentPlugin from '../plugins/agent'
import Message from '../models/message'
import Chat from '../models/chat'

export default class DeepResearchMultiAgent implements dr.DeepResearch {

  config: Configuration
  engine: LlmEngine
  model: string
  generator: Generator

  constructor(config: Configuration) {
    this.config = config
  }

  stop = (): void => {
    this.generator?.stop()
  }

  run = async (engine: LlmEngine, chat: Chat, opts: dr.DeepResearchOpts): Promise<GenerationResult> => {

    // remove all previous plugins
    engine.clearPlugins()

    // to surface all agents work back to message
    const callback = (chunk: LlmChunk): void => {
      const lastMessage = chat.messages[chat.messages.length - 1]
      if (chunk.type === 'tool') {
        lastMessage.addToolCall(chunk)
      } else if (chunk.type === 'content' || chunk.type === 'reasoning') {
        // lastMessage.appendText({
        //   ...chunk,
        //   done: false,
        // })
      }
    }

    // add all deep research agents as plugins
    for (const agent of dr.deepResearchAgents) {
      const agentPlugin = new AgentPlugin(this.config, agent, agent.engine || engine.getId(), agent.model || opts.model, {
        noToolsInContent: true,
        callback: callback,
      })
      engine.addPlugin(agentPlugin)
    }

    // now update instructions
    if (chat.messages.length === 0) {
      chat.messages.push(new Message('system', this.deepResearchInstructions))
    } else {
      chat.messages[0].content = this.deepResearchInstructions
    }

    // now we can generate
    this.generator = new Generator(this.config)
    return await this.generator.generate(this.engine, chat.messages, {
      ...opts,
      ...chat.modelOpts,
      toolChoice: { type: 'tool', name: 'run_agent_planning'}
    }, callback)

  }

  deepResearchInstructions = `You are a research coordinator, the master orchestrator of deep research investigations.

  Your role is to analyze user research queries, and coordinate work across a team of specialized agents to produce comprehensive, high-quality research reports.

  Consider the user highly experienced so don't simplify your answer and be as detailed as possible and make sure your response is correct.
  Do not hesitate to provide detailed explanations. If you speculate or predict, clearly flag it as such.

  The agents at your disposal are:
  - planning: use this agent to create a comprehensive research plan, decompose complex queries, and build the structure of the final report.
  - search: use this agent to execute targeted searches, extract relevant content, and evaluate source credibility
  - analysis: use this agent to extract key learning from the search results, identify patterns, and synthesize knowledge from multiple sources
  - section: use this agent to generate detailed sections of the report based on the analysis, ensuring each section is coherent and well-structured
  - synthesis: use this agent to generate executive summaries and conclusions based on the analysis

  An example of how to use these agents:
  - The user asks about a complex topic, e.g. "What are the latest advancements in quantum computing?"
  - You call the planning agent. It should return a list of sections with a title and correspond web search queries.
  - You will execute the following steps for each section:
    - You call the search agent with the query for that section: it will return a list of relevant sources with their contents.
    - You call the analysis agent with the verbatim and exhaustive content returned by the search agent: it will extract key learnings.
    - The section agent generates a section of the report based on the section objective and the key learnings.

  The final report will be structured as follows:
  - Executive Summary: verbatim of a high-level overview of the research findings written using the synthesis agent.
  - Detailed Sections: verbatim of the detailed reports of each section, generated by the section agent based on the analysis of the search results.
  - Conclusion: verbatim of a summary of the key findings and implications, generated by the synthesis agent.
`

}
